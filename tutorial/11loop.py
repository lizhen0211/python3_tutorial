# Python3 循环语句
# 以下实例使用了 while 来计算 1 到 100 的总和：
n = 100
sum = 0
counter = 1
while counter <= n:
    sum = sum + counter
    counter += 1
print("1 到 %d 之和为: %d" % (n, sum))
print("=============================================================")
# =============================================================
# 无限循环
# var = 1
# while var == 1:  # 表达式永远为 true
#     num = int(input("输入一个数字  :"))
#     print("你输入的数字是: ", num)
#
# print("Good bye!")
# 你可以使用 CTRL+C 来退出当前的无限循环。
# 无限循环在服务器上客户端的实时请求非常有用。
print("=============================================================")
# =============================================================
# while 循环使用 else 语句
# 在 while … else 在条件语句为 false 时执行 else 的语句块
# 语法格式如下：
# while <expr>:
#     <statement(s)>
# else:
#     <additional_statement(s)>

# 循环输出数字，并判断大小：
count = 0
while count < 5:
    print(count, " 小于 5")
    count = count + 1
else:
    print(count, " 大于或等于 5")
print("=============================================================")
# =============================================================
# 简单语句组
# 类似if语句的语法，如果你的while循环体中只有一条语句，你可以将该语句与while写在同一行中， 如下所示：
flag = 1
# while (flag): print('欢迎访问菜鸟教程!')
print("Good bye!")
print("=============================================================")
# =============================================================
# for 语句
# Python for循环可以遍历任何序列的项目，如一个列表或者一个字符串。
# for循环的一般格式如下：
# for <variable> in <sequence>:
#     <statements>
# else:
#     <statements>
languages = ["C", "C++", "Perl", "Python"]
for x in languages:
    print(x)
else:
    print("循环结束")
print("=============================================================")
# =============================================================
# 以下 for 实例中使用了 break 语句，break 语句用于跳出当前循环体：
sites = ["Baidu", "Google", "Runoob", "Taobao"]
for site in sites:
    if site == "Runoob":
        print("菜鸟教程!")
        break
    print("循环数据 " + site)
else:
    print("没有循环数据!")
print("完成循环!")
# 执行脚本后，在循环到 "Runoob"时会跳出循环体：
# 如果你从 for 或 while 循环中终止，任何对应的循环 else 块将不执行。
print("=============================================================")
# =============================================================
# range()函数
# 如果你需要遍历数字序列，可以使用内置range()函数。它会生成数列
for i in range(5):
    print(i)
print("=============================================================")
# =============================================================
# 你也可以使用range指定区间的值：
for i in range(5, 9):
    print(i)
print("=============================================================")
# =============================================================
# 也可以使range以指定数字开始并指定不同的增量(甚至可以是负数，有时这也叫做'步长'):
for i in range(0, 10, 3):
    print(i)
for i in range(-10, -100, -30):
    print(i)
print("=============================================================")
# =============================================================
# 您可以结合range()和len()函数以遍历一个序列的索引,如下所示:
a = ['Google', 'Baidu', 'Runoob', 'Taobao', 'QQ']
for i in range(len(a)):
    print(i, a[i])
print("=============================================================")
# =============================================================
# 还可以使用range()函数来创建一个列表：
print(list(range(5)))
print("=============================================================")
# =============================================================
# break 语句可以跳出 for 和 while 的循环体。
n = 5
while n > 0:
    n -= 1
    if n == 2:
        break
    print(n)
print('循环结束。')
print("=============================================================")
# =============================================================
n = 5
while n > 0:
    n -= 1
    if n == 2:
        continue
    print(n)
print('循环结束。')
print("=============================================================")
# =============================================================
# pass 语句
for letter in 'Runoob':
    if letter == 'o':
        pass
        print('执行 pass 块')
    print('当前字母 :', letter)

print("Good bye!")
